version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Installing Python dependencies..."
      - pip install -r requirements.txt

  pre_build:
    commands:
      - echo "Preparing the test environment..."
      # If you have steps to prepare your test environment, add them here. For example:
      # - python manage.py migrate --noinput (Django example)
      # This is a placeholder; adjust according to your needs.
      
  build:
    commands:
      - echo "Running tests..."
      - pytest
      - echo "Building the Docker image..."
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/orders-service:$CODEBUILD_RESOLVED_SOURCE_VERSION .

  post_build:
    commands:
      - echo "Pushing the Docker image to Amazon ECR..."
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/orders-service:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Writing image definitions file..."
      - printf '[{"name":"orders-service","imageUri":"%s.dkr.ecr.%s.amazonaws.com/orders-service:%s"}]' $AWS_ACCOUNT_ID $AWS_DEFAULT_REGION $CODEBUILD_RESOLVED_SOURCE_VERSION > imagedefinitions.json

artifacts:
  files: imagedefinitions.json
